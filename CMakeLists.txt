cmake_minimum_required(VERSION 3.15)

project(gtest-demo CXX)
project(cli CXX)
set(CMAKE_CXX_STANDARD 14)

# place binaries and libraries according to GNU standards
include(GNUInstallDirs)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_BINDIR})

# we use this to get code coverage
if(CMAKE_CXX_COMPILER_ID MATCHES GNU)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage")
endif()

add_subdirectory(src)

if ($ENV{MOFISH_TEST})
    include(cmake/googletest.cmake)
    fetch_googletest(
            ${PROJECT_SOURCE_DIR}/cmake
            ${PROJECT_BINARY_DIR}/googletest
    )

    enable_testing()
    add_subdirectory(test)
endif ()

add_executable(cli main.cpp)
target_link_libraries(cli mofish)
target_include_directories(cli PUBLIC src)
set_target_properties(cli PROPERTIES OUTPUT_NAME mofish)